package HOT100.三七六_摆动序列;
/*
* 如果连续数字之间的差严格地在正数和负数之间交替，则数字序列称为 摆动序列
* 例如， [1, 7, 4, 9, 2, 5] 是一个 摆动序列 ，因为差值 (6, -3, 5, -7, 3) 是正负交替出现的。
* 相反，[1, 4, 7, 2, 5] 和 [1, 7, 4, 5, 5] 不是摆动序列，
* 因为第一个序列是因为它的前两个差值都是正数，第二个序列是因为它的最后一个差值为零
* 要求:返回 nums 中作为 摆动序列 的 最长子序列的 长度,子序列可以不连续,即可以从原序列中删除几个元素
 * */
public class Solution {
	//贪心算法,统计有多少波峰和波谷
	public int wiggleMaxLength(int[] nums) {
		if (nums.length <= 1) {	//少于1个数,玩个p
			return nums.length;
		}
		int num = 1;	//开头也算一个波峰/波谷
		int flag =0;
		//flag标注上一次对比是不是满足摆动序列,flag=1表示上次是增加的,-1表示上次是减少的,0为初始值防止开头全是相等的数,只是为了进循环
		for (int i = 0; i < nums.length-1; i++) {
			if (flag <= 0 && nums[i] < nums[i + 1]) {	//上次为递减,本次就得递增,nums[i]为一个波谷
				num++;
				flag = 1;	//说明本次为递增
			}
			if (flag >=0 && nums[i] > nums[i + 1]) {	//上次为递增,本次就得递减,nums[i]为一个波峰
				num++;
				flag = -1;	//说明本次为递减
			}
			//flag记录的可以是遥远的状态,之前如果一直在上升或不变,一旦出现一个下降状态,则立刻断定出现一个波峰,num++
		}
		return num;
	}
}
